/*************************************************************************
 * tranSMART - translational medicine data mart
 *
 * Copyright 2008-2012 Janssen Research & Development, LLC.
 *
 * This product includes software developed at Janssen Research & Development, LLC.
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License 
 * as published by the Free Software  * Foundation, either version 3 of the License, or (at your option) any later version, along with the following terms:
 * 1.	You may convey a work based on this program in accordance with section 5, provided that you retain the above notices.
 * 2.	You may convey verbatim copies of this program code as you receive it, in any medium, provided that you retain the above notices.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS    * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *
 ******************************************************************/


//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.11.13 at 10:06:04 AM EST 
//


package com.recomdata.util.ariadne;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the com.recomdata.util.ariadne package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.recomdata.util.ariadne
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Thumbnail }
     */
    public Thumbnail createThumbnail() {
        return new Thumbnail();
    }

    /**
     * Create an instance of {@link Vlink }
     */
    public Vlink createVlink() {
        return new Vlink();
    }

    /**
     * Create an instance of {@link Img }
     */
    public Img createImg() {
        return new Img();
    }

    /**
     * Create an instance of {@link Vobjs }
     */
    public Vobjs createVobjs() {
        return new Vobjs();
    }

    /**
     * Create an instance of {@link Batch }
     */
    public Batch createBatch() {
        return new Batch();
    }

    /**
     * Create an instance of {@link Vlinks }
     */
    public Vlinks createVlinks() {
        return new Vlinks();
    }

    /**
     * Create an instance of {@link Scene }
     */
    public Scene createScene() {
        return new Scene();
    }

    /**
     * Create an instance of {@link Control }
     */
    public Control createControl() {
        return new Control();
    }

    /**
     * Create an instance of {@link Layout }
     */
    public Layout createLayout() {
        return new Layout();
    }

    /**
     * Create an instance of {@link Properties }
     */
    public Properties createProperties() {
        return new Properties();
    }

    /**
     * Create an instance of {@link Controls }
     */
    public Controls createControls() {
        return new Controls();
    }

    /**
     * Create an instance of {@link Attr }
     */
    public Attr createAttr() {
        return new Attr();
    }

    /**
     * Create an instance of {@link Styles }
     */
    public Styles createStyles() {
        return new Styles();
    }

    /**
     * Create an instance of {@link Vobj }
     */
    public Vobj createVobj() {
        return new Vobj();
    }

    /**
     * Create an instance of {@link Resnet }
     */
    public Resnet createResnet() {
        return new Resnet();
    }

    /**
     * Create an instance of {@link Style }
     */
    public Style createStyle() {
        return new Style();
    }

    /**
     * Create an instance of {@link Attachments }
     */
    public Attachments createAttachments() {
        return new Attachments();
    }

    /**
     * Create an instance of {@link Link }
     */
    public Link createLink() {
        return new Link();
    }

    /**
     * Create an instance of {@link Node }
     */
    public Node createNode() {
        return new Node();
    }

    /**
     * Create an instance of {@link Nodes }
     */
    public Nodes createNodes() {
        return new Nodes();
    }

    /**
     * Create an instance of {@link Xlink }
     */
    public Xlink createXlink() {
        return new Xlink();
    }

}
